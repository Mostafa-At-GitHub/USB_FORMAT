if loadfont /boot/grub/font.pf2 ; then
	set gfxmode=auto
	insmod efi_gop
	insmod efi_uga
	insmod gfxterm
	terminal_output gfxterm
fi

set timeout=10
set default=0

set menu_color_normal=white/black
set menu_color_highlight=black/light-gray

# Linux Mint UEFI Secure EFI\Boot\BOOTx64.EFI with grubx64.efi uses /boot/grub/grub.cfg
# Linux Mint No support for UEFI Grub4dos Or vdiskchain Or Grub2 x64 EFI File Manager of a1ive

set iso_drive=""

if [ "${grub_platform}" == "efi" ]; then

   if [ "${grub_cpu}" == "x86_64" ]; then

	if [ -e "/efi/microsoft/boot/bootmgfw.efi" ]; then
	menuentry "Windows EFI BootManager - /efi/microsoft/boot/bootmgfw.efi" {
	  chainloader /efi/microsoft/boot/bootmgfw.efi
	}
	fi

	if [ -e "/efi/boot/bootx64_win.efi" ]; then
	menuentry "Windows EFI BootManager - /efi/boot/bootx64_win.efi" {
	  chainloader /efi/boot/bootx64_win.efi
	}
	fi

   else
	if [ -e "/efi/microsoft/boot/bootmgfw.efi" ]; then
	menuentry "Windows EFI BootManager - /efi/microsoft/boot/bootmgfw.efi" {
	  chainloader /efi/microsoft/boot/bootmgfw.efi
	}
	fi

	if [ -e "/efi/boot/bootia32_win.efi" ]; then
	menuentry "Windows x86 EFI BootManager - /efi/boot/bootia32_win.efi" {
	  chainloader /efi/boot/bootia32_win.efi
	}
	fi
   fi
fi

if [ -e (hd0,msdos1)/images ]; then
menuentry "Linux ISO on (hd0,msdos1)/images - /boot/grub/grub_Linux.cfg" {
  set iso_drive=(hd0,msdos1)
  export iso_drive
  configfile /boot/grub/grub_Linux.cfg
}
fi

if [ -e (hd0,msdos2)/images ]; then
menuentry "Linux ISO on (hd0,msdos2)/images - /boot/grub/grub_Linux.cfg" {
  set iso_drive=(hd0,msdos2)
  export iso_drive
  configfile /boot/grub/grub_Linux.cfg
}
fi

if [ -e (hd1,msdos1)/images ]; then
menuentry "Linux ISO on (hd1,msdos1)/images - /boot/grub/grub_Linux.cfg" {
  set iso_drive=(hd1,msdos1)
  export iso_drive
  configfile /boot/grub/grub_Linux.cfg
}
fi

if [ -e (hd0,gpt3)/images ]; then
menuentry "Linux ISO on (hd0,gpt3)/images - /boot/grub/grub_Linux.cfg" {
  set iso_drive=(hd0,gpt3)
  export iso_drive
  configfile /boot/grub/grub_Linux.cfg
}
fi

if [ "${grub_platform}" == "pc" ]; then

	if [ -e "/grub.exe" ]; then
	menuentry "Grub4dos Menu" {
		linux /grub.exe
	}
	fi

	if [ -e (hd0,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd0,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd0,msdos1)
	  ntldr (hd0,msdos1)/bootmgr
	}
	fi

	if [ -e (hd1,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd1,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd1,msdos1)
	  ntldr (hd1,msdos1)/bootmgr
	}
	fi

	if [ -e (hd2,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd2,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd2,msdos1)
	  ntldr (hd2,msdos1)/bootmgr
	}
	fi

	if [ -e (hd3,msdos1)/bootmgr ]; then
	menuentry "Windows Boot Manager 7/8/10 - (hd3,msdos1)/bootmgr on MBR harddisk" {
	  root=(hd3,msdos1)
	  ntldr (hd3,msdos1)/bootmgr
	}
	fi

	menuentry "Windows Boot Manager 7/8/10 - MBR BIOS mode search /bootmgr" {
	  search --no-floppy --file /bootmgr --set root
	  ntldr /bootmgr
	}

	menuentry "Reboot Main Menu" {
	  chainloader (hd0)+1
	}
fi

if [ "${grub_platform}" == "efi" ] -a [ -e "/EFI/BOOT/BOOTx64.EFI" ]; then
menuentry "Reboot EFI Main Menu" {
  chainloader /EFI/BOOT/BOOTx64.EFI
}
fi

menuentry "Power Off - root=$root   prefix=$prefix" {
  halt
}

menuentry "Reboot" {
  reboot
}
